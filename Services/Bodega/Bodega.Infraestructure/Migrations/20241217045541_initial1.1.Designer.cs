// <auto-generated />
using System;
using Bodega.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bodega.Infraestructure.Migrations
{
    [DbContext(typeof(BodegaDbContext))]
    [Migration("20241217045541_initial1.1")]
    partial class initial11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bodega")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bodega.Core.Entities.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Inventario", b =>
                {
                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeccionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductoId", "SeccionId");

                    b.HasIndex("SeccionId");

                    b.ToTable("Inventarios", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Producto", b =>
                {
                    b.Property<Guid>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Proveedor", b =>
                {
                    b.Property<Guid>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.ProveedorProducto", b =>
                {
                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSuministro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ProveedorId", "ProductoId");

                    b.HasIndex("ProductoId")
                        .HasDatabaseName("IX_ProveedorProducto_ProductoId");

                    b.HasIndex("ProveedorId")
                        .HasDatabaseName("IX_ProveedorProducto_ProveedorId");

                    b.ToTable("ProveedoresProductos", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Seccion", b =>
                {
                    b.Property<Guid>("SeccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EliminadoPor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoPor")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeccionId");

                    b.ToTable("Secciones", "bodega");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Inventario", b =>
                {
                    b.HasOne("Bodega.Core.Entities.Producto", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bodega.Core.Entities.Seccion", "Seccion")
                        .WithMany("Inventarios")
                        .HasForeignKey("SeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Producto", b =>
                {
                    b.HasOne("Bodega.Core.Entities.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Bodega.Core.Entities.ProveedorProducto", b =>
                {
                    b.HasOne("Bodega.Core.Entities.Producto", "Producto")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bodega.Core.Entities.Proveedor", "Proveedor")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Producto", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Proveedor", b =>
                {
                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("Bodega.Core.Entities.Seccion", b =>
                {
                    b.Navigation("Inventarios");
                });
#pragma warning restore 612, 618
        }
    }
}
